FROM golang:1.24 AS builder

# Set working directory
WORKDIR /app

# Copy the entire project including all modules
COPY . ./

# Download dependencies
RUN go mod download

# Install Sphinx and other dependencies for documentation
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    python3-setuptools

# Create a virtual environment and install Sphinx
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install sphinx sphinx_rtd_theme

# Build documentation
RUN cd docs && \
    mkdir -p build/html && \
    sphinx-build -b html source build/html

# Build the discon-manager application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o discon-manager ./discon-manager

# Create a minimal runtime image
FROM alpine:latest

# Install dependencies
RUN apk --no-cache add ca-certificates docker-cli

# Set working directory
WORKDIR /app

# Copy binary and configuration from builder
COPY --from=builder /app/discon-manager .
COPY --from=builder /app/discon-manager/config /app/config
COPY --from=builder /app/discon-manager/db /app/db
COPY --from=builder /app/docs/build/html /app/docs

# Create metrics directory
RUN mkdir -p /app/metrics

# Expose port
EXPOSE 8080

# Set environment variables
ENV DOCKER_HOST=unix:///var/run/docker.sock

# Run the application
ENTRYPOINT ["/app/discon-manager", "--config=/app/config/config.yaml"]